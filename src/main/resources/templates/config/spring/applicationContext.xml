<?xml version="1.0" encoding="UTF-8"?>
<beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:tx="http://www.springframework.org/schema/tx"
	  xmlns:mvc="http://www.springframework.org/schema/mvc"
		
      xsi:schemaLocation="
	
	  http://www.springframework.org/schema/beans 
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	  
	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
 	  
	  http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  
	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<context:property-placeholder location="classpath:spring/datasource.properties"/>
	<!-- datasource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.pwd}"></property>
	</bean>
	<!-- sqlsessionFactory -->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="dataSource" ref="dataSource"></property>
      	<!-- xml扫描 -->
      	<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"></property>
 	</bean>
	<!-- 利用代理生成mapper对象 (class扫描) -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
     	<!-- 扫描的包 -->
      	<property name="basePackage" value="${package.Mapper}"></property>
 	</bean>
 	
 	
 	<!-- 事务 -->
 	
 	<!-- 配置Mybatis的事务管理器，即因为Mybatis底层用的是JDBC事务管理器，所以在这里依然配置JDBC事务管理器 -->
      <bean id="dataSourceTransactionManagerID" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	      <property name="dataSource" ref="dataSource"></property>
      </bean>
      
      <!-- 配置事务通知，即让哪些方法需要事务支持 -->
      <tx:advice id="tx" transaction-manager="dataSourceTransactionManagerID">
      	<tx:attributes>
      		<tx:method name="*" propagation="REQUIRED"/>
      	</tx:attributes>
      </tx:advice>
      
      <!-- 配置事务切面，即让哪些包下的类需要事务 -->
      <aop:config>
      	<!-- 扫描所以以Service结尾的bean -->
    	<aop:pointcut id="serviceOperation" expression="bean(*Service)"/>
      	<!-- <aop:pointcut expression="execution(* cn.linkee.recite_word.service.*.*(..))" id="pointcut"/> -->
      	<aop:advisor advice-ref="tx" pointcut-ref="serviceOperation"/>
      </aop:config>
	
	<!-- 文件上传支持（上传文件时必须定义） -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     <property name="maxUploadSize" value="104857600" />
     <property name="maxInMemorySize" value="4096" />
     <property name="defaultEncoding" value="UTF-8"></property>
	</bean> -->
</beans>
